
dependencies {
	compileOnly "com.liferay.portal:com.liferay.portal.kernel:2.0.0"
	compileOnly group: "javax.ws.rs", name: "javax.ws.rs-api", version: "2.0.1"
	compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"

	compile group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: "2.8.9"

	testCompile 'io.rest-assured:rest-assured:3.0.3'
	testCompile(group: 'junit', name: 'junit', version: '4.4') {
		exclude group:'org.hamcrest'
	}



	compileOnly project(":modules:product:product-api")
}



liferay{
	deployDir "c:/pr/lr/dxpt/osgi/modules"
}



bundle {
	// Include all 'runtime' dependencies in the generated bundle
	def runtime = project.configurations.runtime
	runtime.resolve()
	instruction 'Bundle-ClassPath', '.'
	runtime.resolvedConfiguration.resolvedArtifacts.each {
		def resrc = it.moduleVersion.id.name + '-' +
				it.moduleVersion.id.version + '.jar'
		logger.info('Including runtime dependency ' + it.file.path)
		instruction 'Bundle-ClassPath', 'META-INF/lib/' + resrc
		instruction '-includeresource', 'META-INF/lib/' + resrc + '=' + it.file.path
	}
	instruction 'Import-Package', '!com.sun.jdi.*,!jersey.repackaged.*,!org.hibernate.*,!com.sun.msv.datatype.*,!org.gjt.xpp.*,!org.relaxng.datatype.*,!org.slf4j.impl.*,*'
}
